<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EventManagement.WPF</name>
    </assembly>
    <members>
        <member name="T:EventManagement.WPF.App">
            <summary>
            Interaction logic for App.xaml.
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:EventManagement.WPF.App.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.App"/> class.
            This is a constructor which make the object of the required classes.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:EventManagement.WPF.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:EventManagement.WPF.Data.GuestModel">
            <summary>
            Data model class.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.ID">
            <summary>
            Gets or sets Id.
            this property of Class represents Id for table guests.
            It is unique for every instance and is automatically generated.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.Name">
            <summary>
            Gets or Sets Name attribute of the class.
            This field stores the Guest Name for the Event.
            This is manadatory property and it's Max Length can be 50.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.Contact">
            <summary>
            Gets or Sets Contact attribute of the class.
            This field stores the Contact Info of the Guest.
            This is manadatory property and it's Max Length can be 50.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.Email">
            <summary>
            Gets or Sets Email attribute of the class.
            This field stores the Email Id of the Guest.
            This is manadatory property and it's Max Length can be 50.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.City">
            <summary>
            Gets or Sets City attribute of the class.
            This field stores the City Name where the Guest is from.
            This is manadatory property and it's Max Length can be 50.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.Data.GuestModel.Gender">
            <summary>
            Gets or Sets Gender attribute of the class.
            This field stores the Gender of the Guest.
            This is manadatory property and it's Max Length can be 50.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.Data.GuestModel.ToString">
            <summary>
            Override public function to generate string from object data.
            </summary>
            <returns> String.</returns>
        </member>
        <member name="M:EventManagement.WPF.Data.GuestModel.CopyFrom(EventManagement.WPF.Data.GuestModel)">
            <summary>
            This method creates the copy of the guest which needs to be edited.
            </summary>
            <param name="other">Guest object.</param>
        </member>
        <member name="T:EventManagement.WPF.Logic.GuestLogic">
            <summary>
            This class connects the repository layer with wpf windows.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.Logic.GuestLogic.#ctor(EventManagement.WPF.Logic.IEditorService,GalaSoft.MvvmLight.Messaging.IMessenger,EventManagement.Repository.IGuestRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.Logic.GuestLogic"/> class.
            </summary>
            <param name="editorService">EditorService Type.</param>
            <param name="messengerService">IMessenger Type.</param>
            <param name="guestRepository">IGuestRepository Type.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.GuestLogic.Add(System.Collections.Generic.IList{EventManagement.WPF.Data.GuestModel})">
            <summary>
            This function inserts the new guest to the database.
            </summary>
            <param name="guests">List of guests.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.GuestLogic.Delete(System.Collections.Generic.IList{EventManagement.WPF.Data.GuestModel},EventManagement.WPF.Data.GuestModel)">
            <summary>
            This function is used to delete the selected guest from the database.
            </summary>
            <param name="guests">List of guests.</param>
            <param name="guest">Guest Object.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.GuestLogic.Edit(EventManagement.WPF.Data.GuestModel)">
            <summary>
            This function is used to edit the detail of selected Guest.
            </summary>
            <param name="guest">Guest type parameter.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.GuestLogic.GetAllGuests">
            <summary>
            This function gets the list of guests from the database.
            </summary>
            <returns>IList of Guest type.</returns>
        </member>
        <member name="T:EventManagement.WPF.Logic.IEditorService">
            <summary>
            This acts as sevice to edit the guest.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.Logic.IEditorService.EditGuest(EventManagement.WPF.Data.GuestModel)">
            <summary>
            This functions edits the selected guest.
            </summary>
            <param name="guest">Guest type.</param>
            <returns>boolean value.</returns>
        </member>
        <member name="T:EventManagement.WPF.Logic.IGuestLogic">
            <summary>
            This interface contains methods for logic specified for guest table.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.Logic.IGuestLogic.GetAllGuests">
            <summary>
            This function gets the list of guests from the database.
            </summary>
            <returns>IList of Guest type.</returns>
        </member>
        <member name="M:EventManagement.WPF.Logic.IGuestLogic.Add(System.Collections.Generic.IList{EventManagement.WPF.Data.GuestModel})">
            <summary>
            This function inserts the new guest to the database.
            </summary>
            <param name="guests">List of guests.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.IGuestLogic.Delete(System.Collections.Generic.IList{EventManagement.WPF.Data.GuestModel},EventManagement.WPF.Data.GuestModel)">
            <summary>
            This function is used to delete the selected guest from the database.
            </summary>
            <param name="guests">List of guests.</param>
            <param name="guest">Guest object.</param>
        </member>
        <member name="M:EventManagement.WPF.Logic.IGuestLogic.Edit(EventManagement.WPF.Data.GuestModel)">
            <summary>
            This function is used to edit the detail of selected Guest.
            </summary>
            <param name="guest">Guest type parameter.</param>
        </member>
        <member name="T:EventManagement.WPF.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml.
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:EventManagement.WPF.MainWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.MainWindow"/> class.
            This constructor is called when applications runs.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:EventManagement.WPF.MyIoc">
            <summary>
            This class mantains the singloton behaviour.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.MyIoc.Instance">
            <summary>
            Gets the instance of the object created.
            </summary>
        </member>
        <member name="T:EventManagement.WPF.UI.EditorSeviceViaWin">
            <summary>
            This class acts as editing service for the editing window.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.UI.EditorSeviceViaWin.EditGuest(EventManagement.WPF.Data.GuestModel)">
            <summary>
            This initiate the editing window and display message accordingly.
            </summary>
            <param name="guest">Guest object.</param>
            <returns>Boolean value.</returns>
        </member>
        <member name="T:EventManagement.WPF.UI.EditorWindow">
            <summary>
            Interaction logic for EditorWindow.xaml.
            </summary>
            <summary>
            EditorWindow
            </summary>
        </member>
        <member name="M:EventManagement.WPF.UI.EditorWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.UI.EditorWindow"/> class.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.UI.EditorWindow.#ctor(EventManagement.WPF.Data.GuestModel)">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.UI.EditorWindow"/> class.
            </summary>
            <param name="oldGuest">Guest type parameter.</param>
        </member>
        <member name="P:EventManagement.WPF.UI.EditorWindow.Guest">
            <summary>
            Gets guest object.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.UI.EditorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:EventManagement.WPF.VM.EditViewModel">
            <summary>
            This class acts as view Model for editting window.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.VM.EditViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.VM.EditViewModel"/> class.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.EditViewModel.Guest">
            <summary>
            Gets or sets Guest.
            </summary>
        </member>
        <member name="T:EventManagement.WPF.VM.MainViewModel">
            <summary>
            This class act as viewmodel for the main window.
            </summary>
        </member>
        <member name="M:EventManagement.WPF.VM.MainViewModel.#ctor(EventManagement.WPF.Logic.IGuestLogic)">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.VM.MainViewModel"/> class.
            This constructor takes a parameter of interface IGuestLogic.
            </summary>
            <param name="logic">IGuestLogic object.</param>
        </member>
        <member name="M:EventManagement.WPF.VM.MainViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EventManagement.WPF.VM.MainViewModel"/> class.
            This constructor will be called when it is design mode.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.MainViewModel.GuestSelected">
            <summary>
            Gets or sets this is a getter / setter for the object guestSelected.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.MainViewModel.Guests">
            <summary>
            Gets this contains the list of guests which will shown to user.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.MainViewModel.AddCmd">
            <summary>
            Gets this command will add new guest to database.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.MainViewModel.DelCmd">
            <summary>
            Gets this command will delete guest from database.
            </summary>
        </member>
        <member name="P:EventManagement.WPF.VM.MainViewModel.ModCmd">
            <summary>
            Gets this command will edit guest from database.
            </summary>
        </member>
    </members>
</doc>
